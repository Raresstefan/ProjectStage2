Starting audit...
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/enums/Category.java:27:14: Parameter value should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/enums/CityStrategyEnum.java:17:22: Parameter value should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/enums/ElvesType.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/enums/ElvesType.java:22:15: Parameter value should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:5:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:14:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'createListOfCities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'createListOfCities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:23:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'calcAverageScoreCities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'calcAverageScoreCities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:42:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'sortCities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'sortCities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:48: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:50: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:59:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'sortChildrenById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'sortChildrenById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:59:57: 'children' hides a field. [HiddenField]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:70:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'citiesAndChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'citiesAndChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:73:30: 'children' hides a field. [HiddenField]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:80: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:80:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'orderChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'orderChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:81:26: 'children' hides a field. [HiddenField]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreCityAssignGiftStrategy.java:91:5: Class 'NiceScoreCityAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityAssignGiftStrategy' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/AssignGiftStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/BabyChild.java:4:5: Class 'BabyChild' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BabyChild' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/BabyChild.java:6:16: '10.0' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/YoungAdultChild.java:4:5: Class 'YoungAdultChild' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdultChild' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/TeenKid.java:4:5: Class 'TeenKid' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TeenKid' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftsFactory.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftsFactory.java:8: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftsFactory.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftsFactory.java:9:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/KidChild.java:4:5: Class 'KidChild' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KidChild' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:10:23: Parameter productName should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:10:43: Parameter price should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:10:57: Parameter category should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:16:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:20:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/GiftOutput.java:24:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/BabyAverageScoreStrategy.java:19:16: '10.0' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:8:1: Class SantaClaus should be declared as final. [FinalClass]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:137:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:151:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:151:58: 'children' hides a field. [HiddenField]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:169:29: Parameter children should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/SantaClaus.java:173:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreAssignGiftStrategy.java:7:22: Variable 'children' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreAssignGiftStrategy.java:9:40: Parameter children should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreAssignGiftStrategy.java:13:5: Class 'NiceScoreAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreAssignGiftStrategy' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreAssignGiftStrategy.java:18: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/NiceScoreAssignGiftStrategy.java:20: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:12:15: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:28: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:70:30: '5' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:73:31: '5' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:73:53: '12' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:76:31: '12' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:76:55: '18' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:79:30: '18' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:91:35: '18' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:151:77: '100' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:152:40: '10.0' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:153:32: '10.0' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:168:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:169:54: '30' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:169:59: '100' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:171:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:172:54: '30' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:172:59: '100' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:203:39: '18' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:211:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:214: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:226:69: Parameter i should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:251: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/Main.java:277:26: '30' is a magic number. [MagicNumber]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/IdAssignGiftStrategy.java:9:33: Parameter children should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/IdAssignGiftStrategy.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/IdAssignGiftStrategy.java:25:5: Class 'IdAssignGiftStrategy' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IdAssignGiftStrategy' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildInput.java:24:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'setCityAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'setCityAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildInput.java:24:37: Parameter cityAverageScore should be final. [FinalParameters]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildInput.java:141:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildInput.java:177:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'addGift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'addGift' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildInput.java:177:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildFactory.java:7:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildFactory.java:14:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/ChildFactory.java:20: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/raresrosu/Desktop/Stage2/proiect1/./src/main/TeenAverageScoreStrategy.java:8:37: Parameter scores should be final. [FinalParameters]
Audit done.
Checkstyle ends with 89 errors.
